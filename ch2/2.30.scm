(define (square-tree tree)
  (if (null? tree)
      '()
      (let ((first (car tree))
            (rest (cdr tree)))
        (cons (if (pair? first)
                  (square-tree first)
                  (square first))
              (square-tree rest)))))

(define (square-tree-with-map tree)
  (map (lambda (sub-tree)
         (if (pair? sub-tree)
             (square-tree sub-tree)
             (square sub-tree)))
       tree))
